openapi: 3.1.0
x-stoplight:
  id: ybd37omqrb18c
info:
  title: TechAppointmentApiUpdated
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /createAppointment:
    parameters: []
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
    post:
      summary: ''
      operationId: post-createAppointment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  workOrderId:
                    type: string
                  serviceAppointments:
                    type: array
                    items:
                      type: object
                      properties:
                        worktypeName:
                          type: string
                        status:
                          type: string
                        serviceTerritoryName:
                          type: string
                        serviceAppointmentId:
                          type: string
                        isSplitHorizon:
                          type: boolean
                        earliestStartTime:
                          type: string
                        dueDate:
                          type: string
                  resourcePreferenceId:
                    type: array
                    items:
                      type: object
                      properties: {}
                  messageType:
                    type: string
                  message:
                    type: string
                x-examples:
                  example-1:
                    workOrderId: 0WO8C000000H4XvWAK
                    serviceAppointments:
                      - worktypeName: GPON Install
                        status: Unscheduled
                        serviceTerritoryName: Adamsville TN
                        serviceAppointmentId: 08p8C000000H2riQAC
                        isSplitHorizon: false
                        earliestStartTime: '2022-04-01T14:00:00.000Z'
                        dueDate: '2022-04-24T04:20:00.000Z'
                      - worktypeName: GPON Install
                        status: Unscheduled
                        serviceTerritoryName: Adamsville TN
                        serviceAppointmentId: 08p8C000000H2rjQAC
                        isSplitHorizon: true
                        earliestStartTime: '2022-04-01T14:00:00.000Z'
                        dueDate: '2022-04-04T04:00:00.000Z'
                    resourcePreferenceId: []
                    messageType: success
                    message: Records Created Successfully
              examples:
                createAppointmentResponse:
                  value:
                    workOrderId: 0WO8C000000H4XvWAK
                    serviceAppointments:
                      - worktypeName: GPON Install
                        status: Unscheduled
                        serviceTerritoryName: Adamsville TN
                        serviceAppointmentId: 08p8C000000H2riQAC
                        isSplitHorizon: false
                        earliestStartTime: '2022-04-01T14:00:00.000Z'
                        dueDate: '2022-04-24T04:20:00.000Z'
                      - worktypeName: GPON Install
                        status: Unscheduled
                        serviceTerritoryName: Adamsville TN
                        serviceAppointmentId: 08p8C000000H2rjQAC
                        isSplitHorizon: true
                        earliestStartTime: '2022-04-01T14:00:00.000Z'
                        dueDate: '2022-04-04T04:00:00.000Z'
                    resourcePreferenceId: []
                    messageType: success
                    message: Records Created Successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workOrder:
                  type: object
                  properties:
                    workTypeName:
                      type: string
                    serviceTerritoryName:
                      type: string
                    recordTypeName:
                      type: string
                    DC_Appointment_Priority:
                      type: integer
                    duration:
                      type: integer
                    durationType:
                      type: string
                    latitude:
                      type: number
                    longitude:
                      type: number
                    DC_WO_External_Id__c:
                      type: string
                    DC_Dispatch_Call_Id__c:
                      type: string
                    street:
                      type: string
                    address2:
                      type: string
                    city:
                      type: string
                    postalcode:
                      type: string
                    state:
                      type: string
                    country:
                      type: string
                    taskType:
                      type: string
                    taskTypeDescription:
                      type: string
                    DC_Property_ID__c:
                      type: string
                    DC_Data_Enrichment_Status__c:
                      type: string
                serviceAppointment:
                  type: object
                  properties:
                    earliestStartTime:
                      type: string
                    dueDate:
                      type: string
                    ServiceTerritoryName:
                      type: string
                    Status:
                      type: string
                    latitude:
                      type: number
                    longitude:
                      type: number
                    duration:
                      type: integer
                    durationType:
                      type: string
              x-examples:
                example-1:
                  workOrder:
                    workTypeName: GPON Install
                    serviceTerritoryName: Adamsville TN
                    recordTypeName: ODE Install
                    DC_Appointment_Priority: 2
                    duration: 9
                    durationType: Hours
                    latitude: 35.2359
                    longitude: -88.3906
                    DC_WO_External_Id__c: yanxxx0001
                    DC_Dispatch_Call_Id__c: y7y77yyu
                    street: 8th cross
                    address2: mysore
                    city: bangalore
                    postalcode: '560038'
                    state: Karnataka
                    country: India
                    taskType: Type of Task
                    taskTypeDescription: Description of the task type
                    DC_Property_ID__c: DC_Property_ID__c
                    DC_Data_Enrichment_Status__c: None
                  serviceAppointment:
                    earliestStartTime: '2022-04-01 07:00:00'
                    dueDate: '2022-04-23 21:20:00'
                    ServiceTerritoryName: Adamsville TN
                    Status: Unscheduled
                    latitude: 35.2359
                    longitude: -88.3906
                    duration: 9
                    durationType: Hours
            examples:
              createAppointment:
                value:
                  workOrder:
                    workTypeName: GPON Install
                    serviceTerritoryName: Adamsville TN
                    recordTypeName: ODE Install
                    DC_Appointment_Priority: 2
                    duration: 9
                    durationType: Hours
                    latitude: 35.2359
                    longitude: -88.3906
                    DC_WO_External_Id__c: yanxxx0001
                    DC_Dispatch_Call_Id__c: y7y77yyu
                    street: 8th cross
                    address2: mysore
                    city: bangalore
                    postalcode: '560038'
                    state: Karnataka
                    country: India
                    taskType: Type of Task
                    taskTypeDescription: Description of the task type
                    DC_Property_ID__c: DC_Property_ID__c
                    DC_Data_Enrichment_Status__c: None
                  serviceAppointment:
                    earliestStartTime: '2022-04-01 07:00:00'
                    dueDate: '2022-04-23 21:20:00'
                    ServiceTerritoryName: Adamsville TN
                    Status: Unscheduled
                    latitude: 35.2359
                    longitude: -88.3906
                    duration: 9
                    durationType: Hours
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
